# -*- coding: utf-8 -*-
"""DSA using Python Lab 16-01-25 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uAiqZxDyRNaHF8U1m4_ZmA300QqTKXuK
"""

import array as arr
a = arr.array('i',[1,2,3])
print(a[])

arr = [1,2,3,4,5,6]
for i in range (0, len(arr)):
  print (arr[i])

arr = [[1,2,3],[4,5,6]]
for i in range (0, len(arr)):
  print (arr[i])

arr = [[1,2,3],['a','b']]
for i in range (0, len(arr)):
  print (arr[i])

arr = [1, 2, 3, 2, 5, 6]
print(arr [1:4])

arr = [1, 2, 3, 2, 3, 6]
print(arr.count(2))  # Counts how many times the number 2 appears in the list

"""Reversed Array elements <---"""

arr = [1, 2, 3, 4, 5, 6]
print(arr[6: :-1])

"""Linner Search"""

def linear_search(arr, target):
    for i in range(len(arr)):
        if arr[i] == target:
            return f"Element found at index {i}"
    return "Element not found"

arr = [10, 20, 30, 40, 50]
target = 40

print(linear_search(arr, target))

"""Binnary Search"""

def binary_search(arr, target):
    low = 0
    high = len(arr) - 1

    while low <= high:
        mid = (low + high) // 2  # Find the middle index
        if arr[mid] == target:
            return f"Element found at index {mid}"  # Best-case scenario
        elif arr[mid] < target:
            low = mid + 1  # Search the right half
        else:
            high = mid - 1  # Search the left half

    return "Element not found"  # If the target is not in the list

# Example usage
arr = [10, 20, 30, 40, 50, 60]
target = 30

print(binary_search(arr, target))  # Best-case: Element found at index 2

"""Bu"""